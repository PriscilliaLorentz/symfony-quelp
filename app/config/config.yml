sonata_admin:
    title:      Quelp Administration
    title_logo: bundles/sonataadmin/logo_title.png
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
            -
                position: right
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Welcome to the Quelp Administration Pannel</h2>
                        <p>This section allows you to manage easily the different <code>user accounts</code> 
                        that have being created and more over the different contents of each user 
                        account's content.<br>
                        On this pannel, you can <code>manage accounts</code>, <code>partnerships amoungs users</code>, 
                        and eventually <code>contents of any user</code> on the social network</p>
                        <h4>Top bar menu</h4>
                        <p>This section offers a dropdown menu at the right corner that allows you
                         to manage any of the functionnalities offered by the admin section.
                         on the left part of the bar you can have appropriate ideas on wher you are located 
                         as you <code>manage your contents</code>.<br>
    templates:
        # this is the search configuration
        search:              SonataAdminBundle:Core:search.html.twig
        search_result_block: SonataAdminBundle:Block:block_search_result.html.twig
    security:
        handler: sonata.admin.security.handler.role
        acl_user_manager: my_user_manager

# VichUploaderBundle config for ImageBundle and any other uploads
# https://github.com/dustin10/VichUploaderBundle/blob/master/Resources/doc/usage.md
vich_uploader:
    db_driver: orm

    mappings:
        profile_images:
            uri_prefix:         /web/bundles/front/uploads/profiles
            upload_destination: %kernel.root_dir%/../web/bundles/front/uploads/profiles
            namer:              vich_uploader.namer_uniqid

            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
        user_images:
            uri_prefix:         /web/bundles/front/uploads/images
            upload_destination: %kernel.root_dir%/../web/bundles/front/uploads/images
            namer:              vich_uploader.namer_uniqid

            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true


            # inject_on_load: should the file be injected into the uploadable entity when it is loaded from the data store.
            # The object will be an instance of Symfony\Component\HttpFoundation\File\File (default false)
            # inject_on_load:     false

            # delete_on_update: should the file be deleted when a new file is uploaded (default: true)
            # delete_on_update:   true

            # delete_on_remove: should the file be deleted when the entity is removed (default: true)
            # delete_on_remove:   true


sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.block.service.text:
        sonata.user.block.account:
        sonata.admin.block.admin_list:
            contexts:   [admin]

fos_user:
    db_driver: orm # Le type de BDD à utiliser, nous utilisons l'ORM Doctrine depuis le début
    firewall_name: main # Le nom du firewall derrière lequel on utilisera ces utilisateurs
    user_class: DB\Bundle\dbBundle\Entity\User # La classe de l'entité User que nous utilisons
    registration:
        form:
            type: acme_user_registration
imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @BackendAdminBundle/Resources/config/admin.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    #bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
